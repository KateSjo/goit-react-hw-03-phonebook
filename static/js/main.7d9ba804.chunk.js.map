{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactList.module.css","components/Form/Form.js","components/ContactsList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","onInputChange","e","currentTarget","value","setState","onSubmit","preventDefault","contact","id","shortid","generate","props","reset","className","styles","form","this","onChange","inputNameLabel","type","pattern","title","required","Component","ContactList","contacts","onDeleteContact","map","ContactItem","ContactItemText","ContactItemSpan","onClick","Filter","FilterInput","App","filter","formId","deleteContact","contactId","prevState","formSubmitHandler","data","forEach","element","toLowerCase","alert","changeFilter","getVisibleContact","normalizedFilter","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,yB,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,8B,kBCAhCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,gBAAkB,qCAAqC,gBAAkB,uC,6MCIpKC,E,4MACjBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,cAAgB,SAACC,GACjB,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAgBN,EAAOK,K,EAErBE,SAAW,SAACJ,GACdA,EAAEK,iBACF,IAAMC,EAAU,CACZC,GAAIC,IAAQC,WACZZ,KAAM,EAAKD,MAAMC,KACjBC,OAAO,EAAKF,MAAME,QAEtB,EAAKY,MAAMN,SAASE,GACpB,EAAKK,S,EAELA,MAAQ,WAAO,EAAKR,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAEjD,WACI,OACI,uBAAMc,UAAWC,IAAOC,KAAMV,SAAUW,KAAKX,SAA7C,UACI,yCAEA,uBACQY,SAAUD,KAAKhB,cACfG,MAAOa,KAAKnB,MAAMC,KAClBe,UAAWC,IAAOI,eAClBC,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGhB,0CAEI,uBACInB,MAAOa,KAAKnB,MAAME,OAClBc,UAAWC,IAAOI,eAClBD,SAAUD,KAAKhB,cACfmB,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGhB,wBAAQH,KAAK,SAAb,iC,GAlDkBI,a,gBCsBnBC,EAxBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,gBAAb,OAClB,oBAAIb,UAAWC,IAAOU,YAAtB,SACGC,EAASE,KAAI,gBAAGnB,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,qBACAc,UAAWC,IAAOc,YADlB,UAIA,oBAAGf,UAAWC,IAAOe,gBAArB,UAAuC/B,EAAK,sBAAMe,UAAWC,IAAOgB,gBAAxB,SAA0C/B,OACtF,wBACEoB,KAAK,SACLY,QAAS,kBAAML,EAAgBlB,IAFjC,0DAHKA,S,iBCQEwB,EAZA,SAAC,GAAD,IAAG7B,EAAH,EAAGA,MAAOc,EAAV,EAAUA,SAAV,OACb,mDAEE,uBAAOJ,UAAWC,IAAOmB,YAAad,KAAK,OAAOhB,MAAOA,EAAOc,SAAUA,QCAzDiB,E,4MACjBrC,MAAQ,CACN4B,SAAU,CACZ,CAACjB,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC5C,CAACS,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,aAC7C,CAACS,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC5C,CAACS,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,cAE3CoC,OAAQ,I,EAgBZC,OAAS,WACP3B,IAAQC,Y,EAET2B,cAAgB,SAAAC,GACf,EAAKlC,UAAS,SAAAmC,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SAASU,QAAO,SAAA5B,GAAO,OAAIA,EAAQC,KAAO8B,U,EAGlEE,kBAAoB,SAAAC,GAClB,EAAK5C,MAAM4B,SAASiB,SAAQ,SAAAC,GAC1B,GAAIA,EAAQ7C,KAAK8C,gBAAkBH,EAAK3C,KAAK8C,cAE3C,OADAH,EAAK3C,KAAO,SACL+C,MAAM,0CAGC,WAAdJ,EAAK3C,MAGP,EAAKM,UAAS,gBAAGqB,EAAH,EAAGA,SAAH,MAAmB,CACjCA,SAAS,CAAEgB,GAAH,mBAAYhB,S,EAGvBqB,aAAe,SAAA7C,GACd,EAAKG,SAAS,CAAE+B,OAAQlC,EAAEC,cAAcC,S,EAExC4C,kBAAoB,WACpB,MAA6B,EAAKlD,MAA1BsC,EAAR,EAAQA,OAAQV,EAAhB,EAAgBA,SACVuB,EAAmBb,EAAOS,cAEhC,OAAOnB,EAASU,QAAO,SAAA5B,GAAO,OAC5BA,EAAQT,KAAK8C,cAAcK,SAASD,O,uDA3CxC,WACE,IAAME,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aACnDJ,GACFlC,KAAKZ,SAAS,CAACqB,SAAWyB,M,gCAI9B,SAAmBK,EAAUhB,GACvBvB,KAAKnB,MAAM4B,WAAac,EAAUd,UACpC4B,aAAaG,QAAQ,WAAYL,KAAKM,UAAUzC,KAAKnB,MAAM4B,a,oBAqC/D,WACE,OACE,sBAAKZ,UAAWC,IAAO4C,UAAvB,UACE,cAAC,EAAD,CAAMrD,SAAUW,KAAKwB,oBACrB,cAAC,EAAD,CAAQrC,MAAOa,KAAKnB,MAAMsC,OAAQlB,SAAUD,KAAK8B,eACjD,cAAC,EAAD,CAAarB,SAAUT,KAAK+B,oBAAqBrB,gBAAiBV,KAAKqB,uB,GA9D9Cd,aCFjCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BrE,EAAOC,QAAU,CAAC,eAAiB,6BAA6B,KAAO,sB","file":"static/js/main.7d9ba804.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1_6AG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__1QybO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1_HqL\",\"ContactItem\":\"ContactList_ContactItem__3QznS\",\"ContactItemText\":\"ContactList_ContactItemText__3nTj0\",\"ContactItemSpan\":\"ContactList_ContactItemSpan__3U5lz\"};","import React, { Component } from 'react'\r\nimport styles from './Form.module.css'\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n      name: '',\r\n      number: ''\r\n    }\r\n    onInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({[name]: value})\r\n    }\r\n      onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const contact = {\r\n        id: shortid.generate(),\r\n        name: this.state.name,\r\n        number:this.state.number\r\n    };\r\n    this.props.onSubmit(contact) \r\n    this.reset()\r\n    }\r\n    reset = () => {this.setState({ name: '', number: ''})}\r\n\r\n    render() {\r\n        return (\r\n            <form className={styles.form} onSubmit={this.onSubmit}>\r\n                <label>\r\n                Name\r\n                <input\r\n                        onChange={this.onInputChange}\r\n                        value={this.state.name}\r\n                        className={styles.inputNameLabel}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                />\r\n                </label>\r\n                <label>\r\n                    Phone\r\n                    <input\r\n                        value={this.state.number}\r\n                        className={styles.inputNameLabel}\r\n                        onChange={this.onInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type='submit'>Add contacts</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nForm.propTypes  = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nconst ContactList = ({ contacts, onDeleteContact}) => (\r\n  <ul className={styles.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n        <li\r\n        className={styles.ContactItem}\r\n        key={id}\r\n      >\r\n        <p className={styles.ContactItemText}>{name}<span className={styles.ContactItemSpan}>{number}</span></p>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Удалить\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes  = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Filter by name\r\n    <input className={styles.FilterInput} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes  = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import styles from './App.module.css';\nimport React, { Component } from 'react'\nimport Form from './components/Form/Form'\nimport shortid from 'shortid';\nimport ContactList from './components/ContactsList/ContactList'\nimport Filter from './components/Filter/Filter'\n\nexport default class App extends Component {\n    state = {\n      contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n      filter: '',\n    }\n  \n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'))\n    if (parsedContacts) {\n      this.setState({contacts : parsedContacts})\n    }\n  }\n  \n  componentDidUpdate(prevProps,prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n  \n  formId = () => {\n    shortid.generate()\n  }\n   deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  formSubmitHandler = data => {\n    this.state.contacts.forEach(element => {\n      if (element.name.toLowerCase() === data.name.toLowerCase()) {\n        data.name = 'repeat'\n        return alert('contact is already in the directory')\n      }\n    })\n    if (data.name === 'repeat') {\n      return\n    }\n      this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n      }));\n  }\n   changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n    getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <Form onSubmit={this.formSubmitHandler} />\n        <Filter value={this.state.filter} onChange={this.changeFilter}  />\n        <ContactList contacts={this.getVisibleContact()} onDeleteContact={this.deleteContact}  />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNameLabel\":\"Form_inputNameLabel__24hKb\",\"form\":\"Form_form__5Y9wA\"};"],"sourceRoot":""}